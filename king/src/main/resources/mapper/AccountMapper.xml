<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="king.dao.AccountDao" >

  <resultMap id="BaseResultMap" type="king.model.po.Account" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="acc_no" property="accNo" jdbcType="VARCHAR" />
    <result column="acc_code" property="accCode" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="balance" property="balance" jdbcType="DECIMAL" />
    <result column="freeze_amount" property="freezeAmount" jdbcType="DECIMAL" />
    <result column="sign" property="sign" jdbcType="VARCHAR" />
    <result column="max_balance" property="maxBalance" jdbcType="DECIMAL" />
    <result column="min_balance" property="minBalance" jdbcType="DECIMAL" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="status_code" property="statusCode" jdbcType="INTEGER" />
    <result column="acc_type" property="accType" jdbcType="CHAR" />
    <result column="dc_flag" property="dcFlag" jdbcType="INTEGER" />
    <result column="minus_flag" property="minusFlag" jdbcType="CHAR" />
    <result column="minus_amount" property="minusAmount" jdbcType="DECIMAL" />
    <result column="total_minus_amount" property="totalMinusAmount" jdbcType="DECIMAL" />
    <result column="currency" property="currency" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="version" property="version" jdbcType="INTEGER" />
  </resultMap>

  <select id="findById" resultMap="BaseResultMap">
    select id, acc_code, user_id, balance, freeze_amount,
    dc_flag, version
    from account
    where id = #{id,jdbcType=BIGINT}
  </select>

  <select id="findByAccNo" resultMap="BaseResultMap">
    select id, acc_code, user_id, balance, freeze_amount,
      dc_flag, version
    from account
    where acc_no = #{accNo,jdbcType=BIGINT}
  </select>

  <select id="findByUIdAndCode" resultMap="BaseResultMap" >
    select id, acc_no, acc_code, user_id, balance, freeze_amount, sign, status, status_code, acc_type,
    dc_flag, minus_flag, minus_amount, total_minus_amount, version
    from account
    where user_id = #{userId,jdbcType=BIGINT} and acc_code = #{accCode,jdbcType=INTEGER}
  </select>

  <insert id="save" parameterType="king.model.po.Account" >
    insert into account (acc_no, acc_code, user_id, `status`, status_code, acc_type,
      dc_flag, minus_flag)
    values (#{accNo,jdbcType=VARCHAR}, #{accCode,jdbcType=INTEGER},
      #{userId,jdbcType=BIGINT}, #{status,jdbcType=VARCHAR},
      #{statusCode,jdbcType=BIGINT}, #{accType,jdbcType=CHAR},
      #{dcFlag,jdbcType=CHAR}, #{minusFlag,jdbcType=INTEGER})
  </insert>


  <insert id="saveAccounts" >
    insert into account (acc_no, acc_code, user_id, sign, `status`, status_code, acc_type,
    dc_flag, minus_flag, currency)
    values
    <foreach collection="list" item="item" index="index" separator=",">
      (
      #{item.accNo},#{item.accCode}, #{item.userId},
      #{item.sign}, #{item.status}, #{item.statusCode},
      #{item.accType}, #{item.dcFlag}, #{item.minusFlag}, #{item.currency}
      )
    </foreach>
  </insert>


  <update id="update" parameterType="king.model.po.Account" timeout="1">
    update account
    <set >
      <if test="balance != null" >
        balance = #{balance,jdbcType=DECIMAL},
      </if>
      <if test="freezeAmount != null" >
        freeze_amount = #{freezeAmount,jdbcType=DECIMAL},
      </if>
      <if test="sign != null" >
        sign = #{sign,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        `status` = #{status,jdbcType=VARCHAR},
      </if>
      <if test="statusCode != null" >
        status_code = #{statusCode,jdbcType=BIGINT},
      </if>
      <if test="minusAmount != null" >
        minus_amount = #{minusAmount,jdbcType=DECIMAL},
      </if>
      <if test="totalMinusAmount != null" >
        total_minus_amount = #{totalMinusAmount,jdbcType=DECIMAL},
      </if>
      version = version + 1
    </set>
    where id = #{id,jdbcType=BIGINT} and version = #{version}
  </update>

</mapper>